apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: falco
  namespace: default
  labels:
    app.kubernetes.io/instance: falco
    app.kubernetes.io/name: falco
    app.kubernetes.io/version: "0.32.2"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: falco
      app.kubernetes.io/name: falco
  template:
    metadata:
      name: falco
      labels:
        app.kubernetes.io/instance: falco
        app.kubernetes.io/name: falco
      annotations:
        checksum/certs: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/config: ec969fb51b95e22f18cddf2b97ecc464ca78096c3c6abb91d25a529621857576
        checksum/rules: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      serviceAccountName: falco
      initContainers:
      - name: falco-driver-loader
        image: docker.io/falcosecurity/falco-driver-loader:0.32.2
        env:
        volumeMounts:
        - name: root-falco-fs
          mountPath: /root/.falco
        - name: proc-fs
          readOnly: true
          mountPath: /host/proc
        - name: boot-fs
          readOnly: true
          mountPath: /host/boot
        - name: lib-modules
          mountPath: /host/lib/modules
        - name: usr-fs
          readOnly: true
          mountPath: /host/usr
        - name: etc-fs
          readOnly: true
          mountPath: /host/etc
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
      containers:
      - name: falco
        image: docker.io/falcosecurity/falco-no-driver:0.32.2
        args:
        - /usr/bin/falco
        - --cri
        - /run/containerd/containerd.sock
        - --cri
        - /run/crio/crio.sock
        - -K
        - /var/run/secrets/kubernetes.io/serviceaccount/token
        - -k
        - https://$(KUBERNETES_SERVICE_HOST)
        - --k8s-node
        - "$(FALCO_K8S_NODE_NAME)"
        - -pk
        env:
        - name: FALCO_K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: SKIP_DRIVER_LOADER
          value:
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 512Mi
        volumeMounts:
        - name: root-falco-fs
          mountPath: /root/.falco
        - name: proc-fs
          mountPath: /host/proc
        - name: dev-fs
          readOnly: true
          mountPath: /host/dev
        - name: docker-socket
          mountPath: /host/var/run/docker.sock
        - name: containerd-socket
          mountPath: /host/run/containerd/containerd.sock
        - name: crio-socket
          mountPath: /host/run/crio/crio.sock
        - name: config-volume
          mountPath: /etc/falco
        livenessProbe:
          httpGet:
            port: 8765
            path: /healthz
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            port: 8765
            path: /healthz
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        tty: false
      volumes:
      - name: root-falco-fs
        emptyDir: {}
      - name: boot-fs
        hostPath:
          path: /boot
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: usr-fs
        hostPath:
          path: /usr
      - name: etc-fs
        hostPath:
          path: /etc
      - name: dev-fs
        hostPath:
          path: /dev
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: containerd-socket
        hostPath:
          path: /run/containerd/containerd.sock
      - name: crio-socket
        hostPath:
          path: /run/crio/crio.sock
      - name: proc-fs
        hostPath:
          path: /proc
      - name: config-volume
        configMap:
          name: falco
          items:
          - key: falco.yaml
            path: falco.yaml
          - key: falco_rules.yaml
            path: falco_rules.yaml
          - key: falco_rules.local.yaml
            path: falco_rules.local.yaml
          - key: application_rules.yaml
            path: rules.available/application_rules.yaml
          - key: k8s_audit_rules.yaml
            path: k8s_audit_rules.yaml
          - key: aws_cloudtrail_rules.yaml
            path: aws_cloudtrail_rules.yaml
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
  updateStrategy:
    type: RollingUpdate
