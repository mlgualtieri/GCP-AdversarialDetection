#
# These are custom rules that that sit on top of the default falco ruleset
# and have been tuned to reduce false positivies from a default
# Google Kubernetes Engine cluster deployment.  They will require tuning to
# be useful to your environment and reduce false positives.
#
# Notes on syntax:
#   proc.name maps to process name
#   proc.pname maps to parent process name
#   proc.aname[2] maps to gparent (grandparent) process name
#   proc.aname[3] maps to ggparent (great grandparent) process name
#   proc.aname[4] maps to gggparent (great great grandparent) process name
#

- rule: GCP Metadata API call detected
  desc: Detect if a process is attempting to access the GCP metadata API
  condition: >
    spawned_process and container and
    (
        ((proc.cmdline contains "Metadata-Flavor") and (proc.cmdline contains "Google")) or
        (proc.cmdline contains "metadata.google.internal")
    )
  output: >
    A process is attempting to call the GCP Metadata API
    (command=%proc.cmdline program=%proc.name parent=%proc.pname gparent=%proc.aname[2] container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)
  priority: CRITICAL
  tags: [network, process, mitre_execution]


# This rule can be removed if not useful for your use-case
# Its intended to classify some noisy events caused by specific microservices
# into a rule that can be filtered for general review but can still be reviewed when required
- rule: Ignored your-application suspicious executable activity
  desc: Classify common suspicious executable events originating in your-application differently
  condition: >
    spawned_process and container and (container.name = "your-application") and
    ( 
      (proc.name in (bash, sh, python, some, other, processes))
    )
    and not ((container.name = "your-application") and (proc.cmdline contains "some string"))
    and not ((container.name = "your-application") and (proc.cmdline contains "some other string"))
    and not ((container.name = "your-application") and (proc.pname = "some_process"))
  output: >
    Ignored your-application suspicious process running in the container
    (command=%proc.cmdline program=%proc.name parent=%proc.pname gparent=%proc.aname[2] container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)
  priority: WARNING
  tags: [process, mitre_execution]



# This rule detects the use of common command line tools an adversary may use
# Customize for your use-case and filter our known use in your environment
# Some example filters are provided
- rule: Suspicious executable activity
  desc: Detect if a potentially problematic process was executed in the container
  condition: >
    spawned_process and container and
    ( 
      (proc.name in (bash, dash, sh, wget, whoami, id, env, sudo, su, capsh, tcpdump, gcloud, gsutil, kubectl, kubeletmein, python, python3, git))
    )
    and not (proc.pname in (your, processes, here))
    and not ((proc.name = "your-process") and (proc.pname = "your-process"))
    and not (proc.cmdline contains "some commandline syntax")
    and not (proc.cmdline = "sh -c your_executable")
    and not ((container.name = "your-application") and (proc.pname = "known_parent_process"))
    and not ((container.image.repository = "gcr.io/your-project/your-container") and (proc.cmdline contains "known commandline syntax"))
  output: >
    A suspicious process has been detected running in the container
    (command=%proc.cmdline program=%proc.name parent=%proc.pname gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4] container_id=%container.id container_name=%container.name image=%container.image.repository:%container.image.tag)
  priority: CRITICAL
  tags: [process, mitre_execution]



# These conditions take a lot of tuning since `/var/run/secrets/kubernetes.io/*`
# and `/etc/passwd`are widely touched by processes, but once tuned provide a 
# useful alert into files an adversary may target
#
# Append to macro: sensitive_files
- macro: sensitive_files
  append: true
  condition: >
    or  
    (   
      (fd.name startswith "/var/run/secrets/kubernetes.io/serviceaccount") 
      and not (proc.name in (kube-proxy, storage-provisi, coredns, cluster-proport, metrics-server, otelsvc, kube-dns, pod_nanny, calico-typha, calico-node, cpvpa, launcher, start_runit, runsv))
      and not (proc.pname in (containerd-shim, runsv))
      and not (proc.aname[2] in (systemd))
      and not (proc.aname[3] in (systemd))
      and not (proc.aname[4] in (systemd))
    )   
    or  
    (   
      (fd.name = "/etc/passwd") 
      and not (proc.name in (run, tar, vim, node, pod_nanny, start_runit, nvm, git, chown, ip-masq-agent, google_metadata, tini, openresty, find, fluent-bit-gke-, netd, ruby, dnsmasq, launcher, kubectl, nginx, cluster-proport, cpvpa, google_guest_ag, ssh, kube-state-metr, rake, calico-node, top, gke-metadata-se, curl, ls, sugar_controlle, controller, ldd, all, htop))
      and not (proc.pname in (run, runsv, runc, systemd, kubelet, pod_nanny, tar, containerd-shim, calico-node))
      and not (proc.aname[2] in (systemd))
      and not (proc.aname[3] in (systemd))
      and not (proc.aname[4] in (systemd, containerd-shim))
      and not (proc.cmdline contains "your known cmdline syntax")
      and not ((container.image.repository = "gcr.io/your-project/your-container") and (proc.name in (your, processes, here)))
    )   



# Append to macro
# Package management process launched in container
- macro: user_known_package_manager_in_container
  append: true
  condition: 
    or ((proc.cmdline contains "npm") and (container.name in (your-application))) 


# Append to macro
# File below known binary directory renamed/removed
- macro: user_known_modify_bin_dir_activities
  append: true
  condition: 
    or (proc.cmdline = "containerd")
    or (proc.cmdline = "runsv")


# Append to macro
# Directory below known binary directory created
- macro: user_known_mkdir_bin_dir_activities
  append: true
  condition: 
    or (proc.cmdline = "runsv")


# Append to macro
# File below /etc opened for writing
- macro: user_known_write_below_etc_activities
  append: true
  condition: 
    or (proc.name = "start_runit")
    or (proc.pname = "start_runit")


# Append to macro
# Log files were tampered
- macro: allowed_clear_log_files
  append: true
  condition: 
    or (proc.cmdline = "containerd")


# Append to macro
# Shell history had been deleted or renamed
- macro: var_lib_docker_filepath
  append: true
  condition: or ((evt.arg.name startswith /var/lib/container) or (fd.name startswith /var/lib/container))


# Append to macro
# a shell configuration file has been modified
- macro: user_known_shell_config_modifiers
  append: true
  condition: 
    or (proc.cmdline = "containerd")


## Append to macro
## Docker or kubernetes client executed in container
#- macro: user_known_k8s_client_container_parens
#  append: true
#  condition: 
#    or (proc.cmdline contains "app=site-init-job")


# Append to macro
# File below a monitored directory opened for writing 
- macro: user_known_write_monitored_dir_conditions
  append: true
  condition: 
    or (proc.cmdline contains "google_guest_ag")


# Append to macro
# Mount was executed inside a privileged container
- macro: user_known_mount_in_privileged_containers
  append: true
  condition: 
    or (container.image.repository = "gke.gcr.io/gcp-compute-persistent-disk-csi-driver")


# Disable rule
# Shell history had been deleted or renamed
# The filtering of false positives doesn't appear to work for this rule
# and it can be noisy in some environments
# To test rule in your environment comment out these next two rules
- rule: Delete or rename shell history
  enabled: false

# Disable rule
# Ensure old rule is also disabled
# Shell history had been deleted or renamed
- rule: Delete Bash History
  enabled: false


# Append to rule
# File below / or /root opened for writing
- rule: Write below root
  append: true
  condition: 
    and not (proc.name in (your, processes, here)
    and not (proc.pname in (sshd, systemd)) 
    and not (fd.name startswith /known/path/here/)


# Append to rule
- rule: Modify Shell Configuration File
  append: true
  condition: and not (proc.pcmdline in (google_guest_ag))


# Append to rule
- rule: Write below monitored dir
  append: true
  condition: and not (proc.aname[2] in (systemd, start_runit))


# Append to list: sensitive_directory_names
- list: sensitive_directory_names
  append: true
  items: [/var/run/secrets/kubernetes.io/serviceaccount]


# Known cryptominer / coinminer domains
# Updated lists can be retrieved at:
# https://minerstat.com/mining-pool-whitelist.txt
- list: miner_domains_custom
  items: [
    "miner_domain_1",
    "miner_domain_2",
    "miner_domain_3",
    "miner_domain_4"
  ]

# Known cryptominer / coinminer ip addresses
# Updated lists can be retrieved at:
# https://minerstat.com/mining-pool-whitelist.txt
- list: miner_ips_custom
  items: [
    "x.x.x.x",
    "x.x.x.x",
    "x.x.x.x"
  ]


# Append to macro
- macro: minerpool_other
  append: true
  condition: 
      or (fd.sip.name in (miner_domains_custom))
      or (fd.ip in (miner_ips_custom))


#
# End: rules-custom.yaml 
